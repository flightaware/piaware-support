#!/usr/bin/env tclsh

#
# generate dump1090 and beast-splitter configuration
#

package require fa_config_generator

proc generate_receiver_config {config} {
	generate_beast_splitter_config $config
	generate_dump1090_config $config
	generate_dump978_config $config
	return 1
}

proc generate_beast_splitter_config {config} {
	if {![$config get allow-modeac]} {
		# disable A/C on the input side
		set force "--force j"
	} else {
		set force ""
	}

	switch -nocase [$config get receiver-type] {
		beast {
			lappend relayconfig "ENABLED=yes"

			set baud [$config get beast-baudrate]
			if {$baud ne ""} {
				lappend relayconfig "INPUT_OPTIONS=\"--serial /dev/beast --fixed-baud $baud $force\""
			} else {
				lappend relayconfig "INPUT_OPTIONS=\"--serial /dev/beast $force\""
			}
		}

		relay {
			lappend relayconfig "ENABLED=yes"
			lappend relayconfig "INPUT_OPTIONS=\"--net [$config get receiver-host]:[$config get receiver-port] $force\""
		}

		radarcape {
			lappend relayconfig "ENABLED=yes"
			lappend relayconfig "INPUT_OPTIONS=\"--net [$config get radarcape-host]:10003 $force\""
		}

		default {
			lappend relayconfig "# beast-splitter does not run when receiver-type=[$config get receiver-type]"
			lappend relayconfig "ENABLED=no"
		}
	}

	lappend relayconfig "OUTPUT_OPTIONS=\"--listen 30005:R --connect localhost:30104:R\""
	::fa_config_generator::generate_file "/etc/default/beast-splitter" $relayconfig
	return 1
}

proc generate_dump1090_config {config} {
	set defaults {
		ENABLED yes
		RECEIVER none
		RECEIVER_SERIAL {}
		RECEIVER_GAIN 60
		ADAPTIVE_DYNAMIC_RANGE yes
		ADAPTIVE_BURST no
		ADAPTIVE_MIN_GAIN {}
		ADAPTIVE_MAX_GAIN {}
		SLOW_CPU auto
		WISDOM {}
		ERROR_CORRECTION yes
		RECEIVER_LAT {}
		RECEIVER_LON {}
		MAX_RANGE 360
		NET_RAW_INPUT_PORTS {}
		NET_RAW_OUTPUT_PORTS 30002
		NET_SBS_OUTPUT_PORTS 30003
		NET_BEAST_INPUT_PORTS 30004,30104
		NET_BEAST_OUTPUT_PORTS 30005
		JSON_LOCATION_ACCURACY 2
		EXTRA_OPTIONS {}
		OVERRIDE_OPTIONS {}
	}

	set opts [dict create {*}$defaults]

	switch -nocase [$config get receiver-type] {
		rtlsdr {
			dict set opts ENABLED yes
			dict set opts RECEIVER rtlsdr
			dict set opts RECEIVER_SERIAL [$config get rtlsdr-device-index]

			set gain [$config get rtlsdr-gain]
			if {$gain eq "max"} {
				dict set opts RECEIVER_GAIN 60
			} else {
				dict set opts RECEIVER_GAIN $gain
			}

			set ppm [$config get rtlsdr-ppm]
			if {$ppm ne 0} {
				dict append opts EXTRA_OPTIONS "--ppm" $ppm
			}

			dict set opts NET_BEAST_OUTPUT_PORTS 30005
		}

		bladerf {
			dict set opts ENABLED yes
			dict set opts RECEIVER bladerf
			dict set opts RECEIVER_GAIN 66
			dict append opts EXTRA_OPTIONS "--bladerf-fpga" "/usr/share/dump1090-fa/bladerf/decimate8-x40.rbf"
			dict append opts EXTRA_OPTIONS "--bladerf-decimation" "8"
			dict append opts EXTRA_OPTIONS "--bladerf-bandwidth" "14000000"
			dict append opts EXTRA_OPTIONS "--freq" "1085200000"
			dict set opts NET_BEAST_OUTPUT_PORTS 30005
		}

		beast - radarcape - relay {
			# 30005 output is provided by beast-splitter
			dict set opts ENABLED yes
			dict set opts RECEIVER none
			dict set opts NET_BEAST_OUTPUT_PORTS {}
		}

		none - other {
			dict set opts ENABLED no
		}

		default {
			::fa_config_generator::logger "unrecognized receiver-type '[$config get receiver-type]', not configuring dump1090"
			dict set opts ENABLED no
		}
	}

	if {![$config get allow-modeac]} {
		dict append opts EXTRA_OPTIONS "--no-modeac-auto"
	}

	dict set opts EXTRA_OPTIONS [join [dict get $opts EXTRA_OPTIONS]]

	set dump1090config [list]
	foreach {k v} $opts {
		lappend dump1090config "${k}=\"${v}\""
	}

	::fa_config_generator::generate_file "/etc/default/dump1090-fa" $dump1090config
	return 1
}

proc generate_dump978_config {config} {
	set receiverOpts [list "--raw-port" "30978" "--json-port" "30979"]
	set enabled 1

	switch -nocase [$config get uat-receiver-type] {
		sdr {
			set gain [$config get uat-sdr-gain]
			if {$gain ne "max"} {
				# default is max gain, only need to override if different
				lappend receiverOpts "--sdr-gain" $gain
			}
			set ppm [$config get uat-sdr-ppm]
			if {$ppm ne 0} {
				lappend receiverOpts "--sdr-ppm" $ppm
			}
			lappend receiverOpts "--sdr" [$config get uat-sdr-device]
		}

		stratuxv3 {
			lappend receiverOpts "--stratuxv3" "/dev/uatradio"
		}

		none - other {
			set enabled 0
		}

		default {
			::fa_config_generator::logger "unrecognized uat-receiver-type '[$config get uat-receiver-type]', not configuring dump978"
			set enabled 0
		}
	}

	set dump978config [list]
	set skyaware978config [list]
	if {$enabled} {
		lappend dump978config "ENABLED=yes"
		lappend dump978config "RECEIVER_OPTIONS=\"[join $receiverOpts " "]\""

		lappend skyaware978config "ENABLED=yes"
		lappend skyaware978config {NET_OPTIONS="--connect localhost:30978 --reconnect-interval 30"}
		lappend skyaware978config {HISTORY_OPTIONS="--history-count 120 --history-interval 30"}
	} else {
		lappend dump978config "# dump978-fa does not run when uat-receiver-type=[$config get uat-receiver-type]"
		lappend dump978config "ENABLED=no"

		lappend skyaware978config "# skyaware978 does not run when uat-receiver-type=[$config get uat-receiver-type]"
		lappend skyaware978config "ENABLED=no"
	}

	::fa_config_generator::generate_file "/etc/default/dump978-fa" $dump978config
	::fa_config_generator::generate_file "/etc/default/skyaware978" $skyaware978config

	return 1
}

if {!$tcl_interactive} {
	::fa_config_generator::generate_from_argv generate_receiver_config $argv
}
